var VueDirectiveObservable=function(e,l){"use strict";l=l&&l.hasOwnProperty("default")?l.default:l;var a={bind:function(e,a){var s={class:a.value.class?a.value.class instanceof Array?a.value.class:[a.value.class]:"string"==typeof a.value?a.value.split(/\s/):[],multiple:!!a.value.multiple,threshold:a.value.threshold?a.value.threshold:0,callback:a.value.callback?a.value.callback:null};a.value=s;var n=new l((function(l){l.forEach((function(l){var n=l.isIntersecting,r=l.target;n?(s.class.forEach((function(e){r.classList.add(e)})),s.callback&&s.callback(),!1===s.multiple&&a.value.observer.unobserve(e)):s.class.forEach((function(e){r.classList.remove(e)}))}))}),{threshold:s.threshold});a.value.observer=n,n.observe(e)},unbind:function(e,l){l.value.observer&&l.value.observer.unobserve(e)}};function s(e){s.installed||(s.installed=!0,e.directive("observable",a))}var n={install:s},r=null;return"undefined"!=typeof window?r=window.Vue:"undefined"!=typeof global&&(r=global.Vue),r&&r.use(n),a.install=s,e.default=a,e}({},IntersectionObserver);